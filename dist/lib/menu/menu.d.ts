import { Observable, Subject } from 'rxjs';
import MenuItem from "./menu-item";
import { ClickState } from "../enums";
import Trace from "../../utlis/trace";
import { DragDefinition, Input, MenuData, MenuEventDefinition, MenuItemDefinition, SettingsDefinition } from "../interfaces";
export default class Menu implements MenuData {
    readonly inputActivation$: Subject<Input>;
    readonly inputDeactivation$: Subject<Input>;
    readonly inputPosition$: Subject<paper.Point>;
    private _inputPosition;
    private readonly _click$;
    private readonly _dragging$;
    private readonly _rootSelector;
    private _root;
    private _canvas;
    private _scope;
    private _rootItem;
    private readonly _settings;
    private readonly _fadeAnimation;
    private readonly _trace;
    private _traceVisGroup;
    private _markingMode;
    constructor(rootSelector: string, settings?: Record<string, any> | SettingsDefinition);
    get inputPosition(): paper.Point;
    get click$(): Observable<ClickState>;
    get dragging$(): Observable<DragDefinition>;
    get selection$(): Observable<MenuEventDefinition>;
    get trace$(): Trace;
    get markingMode(): boolean;
    get canvas(): HTMLCanvasElement;
    init(): void;
    display(position?: paper.Point | null): void;
    hide(): void;
    setStructure(structure: MenuItem): void;
    resize(): void;
    toJSON(): MenuItemDefinition;
    private setupCanvas;
    private setupScope;
    private setupObservables;
    private setupObservableDataFromPointerEvents;
    private setupObservableDataFromInputEvents;
    private createObserver;
    drawTrace(): void;
}
